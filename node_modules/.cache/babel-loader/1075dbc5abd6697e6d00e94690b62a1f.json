{"ast":null,"code":"var _jsxFileName = \"/home/muamerslinux/reactProjects/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  } //render needs to be here\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", this.state.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else if (this.state.lat && !this.state.errorMessage) {\n      return /*#__PURE__*/_jsxDEV(SeasonDisplay, {\n        lat: this.state.lat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));","map":{"version":3,"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"sources":["/home/muamerslinux/reactProjects/seasons/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.setState({ lat: position.coords.latitude });\n      },\n      (err) => {\n        this.setState({ errorMessage: err.message });\n      }\n    );\n  }\n\n  //render needs to be here\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    } else if (this.state.lat && !this.state.errorMessage) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    } else {\n      return <div>Loading!</div>;\n    }\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAChCC,KADgC,GACxB;MAAEC,GAAG,EAAE,IAAP;MAAaC,YAAY,EAAE;IAA3B,CADwB;EAAA;;EAGhCC,iBAAiB,GAAG;IAClBC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACGC,QAAD,IAAc;MACZ,KAAKC,QAAL,CAAc;QAAER,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;MAAvB,CAAd;IACD,CAHH,EAIGC,GAAD,IAAS;MACP,KAAKH,QAAL,CAAc;QAAEP,YAAY,EAAEU,GAAG,CAACC;MAApB,CAAd;IACD,CANH;EAQD,CAZ+B,CAchC;;;EACAC,MAAM,GAAG;IACP,IAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;MAC9C,oBAAO;QAAA,sBAAa,KAAKD,KAAL,CAAWE,YAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO,IAAI,KAAKF,KAAL,CAAWC,GAAX,IAAkB,CAAC,KAAKD,KAAL,CAAWE,YAAlC,EAAgD;MACrD,oBAAO,QAAC,aAAD;QAAe,GAAG,EAAE,KAAKF,KAAL,CAAWC;MAA/B;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,MAEA;MACL,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;EACF;;AAvB+B;;AA0BlCN,QAAQ,CAACmB,MAAT,eAAgB,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB"},"metadata":{},"sourceType":"module"}